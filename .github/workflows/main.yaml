name: Build and Deploy

on:
  push:
    branches: [main]
    paths-ignore:
      - "deploy/infra/**"

  pull_request:
    branches: [main]
    paths-ignore:
      - "deploy/infra/**"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build:
    uses: tx-pts-dai/github-workflows/.github/workflows/docker-build.yaml@v0.1.0

  push:
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        config:
          - environment: dev
            region: eu-central-1
            role: cicd-iac
            account_id: <DEV_ACCOUNT_ID>
          # - environment: production
          #   region: eu-central-1
          #   role: cicd-iac
          #   account_id: <PROD_ACCOUNT_ID>

    uses: tx-pts-dai/github-workflows/.github/workflows/docker-push-ecr.yaml@v0.1.0
    with:
      aws_region: ${{ matrix.config.region }}
      aws_role_name: ${{ matrix.config.role }}
      aws_account_id: ${{ matrix.config.account_id }}

  # deploy_tf:
  #   needs: [push]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - environment: dev
  #           region: eu-central-1
  #           role: cicd-iac
  #           account_id: <DEV_ACCOUNT_ID>
  #           tf_deploy_override: true
  #         - environment: production
  #           region: eu-central-1
  #           role: cicd-iac
  #           account_id: <PROD_ACCOUNT_ID>
  #           tf_deploy_override: false

  #   uses: tx-pts-dai/github-workflows/.github/workflows/tf-deploy-basic.yaml@v0.1.0
  #   with:
  #     environment: ${{ matrix.config.environment }}
  #     aws_region: ${{ matrix.config.region }}
  #     aws_role_name: ${{ matrix.config.role }}
  #     aws_account_id: ${{ matrix.config.account_id }}
  #     tf_state_bucket: tf-state-${{ matrix.config.account_id }}
  #     tf_state_key: ${{ github.event.repository.name }}/app.tfstate
  #     tf_dir: deploy/app
  #     tf_version: 1.6.6
  #     tf_deploy_override: ${{ matrix.config.tf_deploy_override }}
  #     tf_var_files: "./environments/${{ matrix.config.environment }}.tfvars"
  #     tf_vars: |
  #       "image_tag=${{ github.sha }}"

  deploy_helm:
    needs: [push]
    strategy:
      fail-fast: false
      matrix:
        config:
          - environment: dev
            region: eu-central-1
            role: cicd-iac
            account_id: <DEV_ACCOUNT_ID>
            cluster_name: <DEV_CLUSTER_NAME>
          # - environment: production
          #   region: eu-central-1
          #   role: cicd-iac
          #   account_id: <PROD_ACCOUNT_ID>

    # Deploy something with Helm - TODO: Create re-usable workflow?
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ matrix.config.account_id }}:role/${{ matrix.config.role_name }}
          aws-region: ${{ matrix.config.account_id }}
      - run: |
          aws eks update-kubeconfig --cluster-name ${{ matrix.config.cluster_name }}
      - run: |
          helm upgrade "<APPLICATION-NAME>" "https://github.com/DND-IT/app-helm-chart/archive/3.5.1.tar.gz" \
            --values "app/values.yaml" \
            --install --wait --timeout ${HELM_TIMEOUT:-300}s \
            --namespace "${{ matrix.config.environment }}" \
            --set image_tag="${{ github.sha }}" \
